【2018/03/03】使われた規則をマーキングする機能を追加
・使われなくなった規則を探して削除する作業を容易化するために、
  番組名書換えで使われた規則を青字でマーキングする機能を追加

・起動時に、新規則追加用として先頭と最後に空規則を5個追加

【2017/11/12】diga-dump.jsで出力した番組情報を直接利用するためのツール追加
・出力した番組情報をSakura Editorなどのツールで編集してコピーし、
  store-tinfo.htmlの【番組情報】欄に張り付け、「保管」ボタンを押す。
  ※番組名以外の部分は変更しないこと。

・diga-rename.htmlを開くと、【変更対象番組一覧】に情報が表示されるので、
  DIGAに接続して、番組名変更を開始すれば、番組名が書き換わる。

【2016/4/10】番組情報取得部をSelenium WebDriverを使って記述

・Webブラウザ操作の自動化ツールのうち、既存Web Browserを
  操作可能なSelenium WebDriverを使って記述してみました。
  ・ファイル：diga-dump-selenium-webdriver.js

・これに際して、diga-dump-casperjs.jsも少し修正。
  (Browser側で実行する関数getTinfo()をできるだけ共通化)

【2016/4/10】番組情報取得部をCasperJSで記述

・NodeJSやCasperJSの勉強の一環として、DIGAから番組情報を
  取得する部分を、CasperJSで記載してみました。
  ・ファイル：diga-dump-casperjs.js
  
・これに際して、元々のファイル(diga-dump.js)のバグを修正。
  (chromeのDeveloper toolsではエラーが出ないが、
   CasperJSではエラーが出ため)

【2016/03/18】番組名書換え中止後に再開した場合の処理を変更

・最初からやり直すのではなく、処理済みの部分をスキップするように変更。
・また、「変更済みの件数」欄の値は書き換え可能であり、
  書き換えた場合、先頭の変更済み件数分はスキップする。


【2016/03/11(その２)】rename-tinfo.jsを更に微修正(より汎用的なbind()を活用)

・変更前
番組情報のどこを使って比較するかを、関数生成時に埋め込み
var compTinfoAbyTitle = genCompTinfoA(colOfTitle)
...
tinfoAA.sort(compTinfoAbyTitle)
...
function genCompTinfoA(colToSort) {
  return function(tinfoA1, tinfoA2) {
  ...
  }
}

・変更後
番組情報のどこを使って比較するかは、bind()で埋め込み(変更前より汎用的)
var compTinfoAbyTitle = compTinfoA.bind(null, colOfTitle)
...
tinfoAA.sort(compTinfoAbyTitle)
...
function compTinfoA(colToSort, tinfoA1, tinfoA2) {
...
}

【2016/03/11】rename-tinfo.jsを微修正(番組情報比較関数のインターフェースを変更)

・変更前
番組情報のどこを使って比較するかを、グローバル変数を使って関数compAAに伝達
colToSort = colOfNo; tinfoAA.sort(compAA)

・変更後
番組情報のどこを使って比較するかを、関数生成時に埋め込み
var compTinfoAbyTitle = genCompTinfoA(colOfTitle)
...
tinfoAA.sort(compTinfoAbyTitle)
...
function genCompTinfoA(colToSort) {
  return function(tinfoA1, tinfoA2) {
  ...
  }
}

【2016/03/10】diga-dump.jsを微修正

・関数digaGetTitlesStartの可変引数処理を、一般的な形に変更。
　(元々は、Webで少し調べて見つかったコードを流用。
　 今回、Javascript第６版を通読中に見つかったやり方に変更)

【2016/03/09】保守性向上に向けコメント追加、関数名・変数名等見直し

・後からメンテできるように、コメントを追加。
・関数名・変数名も、できるだけ分かりやすい名称に変更。

【2016/03/07】番組名書換え中の進捗表示の改善など

・DIGAで番組名変更中に、一覧中の番組を赤字で示すように変更。
　前々からやりたかったが、<textarea>で実現できるか不明だった。
　<textarea>では実現できないことが分かったので、<ul>で実現。

・画面のレイアウトを少し改善。
　rename-tinfo.htmlで、画面のサイズが小さいと書換え規則が
　画面の下側に移動して見えなくなる問題点があった。これを改善。

・番組名ダンプ時のファイル名に、日付と日時を付加。
　過去分を取っておきたいが、いちいちリネームするのが面倒なため。

【2016/03/05】全ファイルの文字コードをUTF-8に統一

・DIGAに対する文字コード問題(サポートしていない文字コードです)は、
　DIGAにデータを送信するformで「accept-charset="shift_jis"」を指定
　することで解決。このformを含むファイル自体は、utf-8でも問題ない。
　主な変更ファイルは下記。
　- diga-rename-leftF.html

【2016/03/04】DIGAのIPアドレスをGUIから入力するように修正

・これまで、DIGAのIPアドレスが２つのファイルに埋め込んであったが、
　GUIから指定するように変更。
・DIGAのIPアドレスは、次回利用時に引き継がれる(変更は可能)。
・この修正に際して、新しいファイルを追加する共に、ファイル名も変更。
　- diga-rename-rightF.html　(追加)
　- diga-rename-leftF.js　(diga-rename.jsから変更)

【2016/03/03】書換え規則で単純な文字列も使えるよう修正

■rename-tinfo.html, js修正
・各書換え規則に「正規表現かを示すチェックボックス」を追加。
　(デフォルトではチェックされていない）
　・チェックされた書換え規則は、正規表現で書換え、
　　それ以外の規則は、単純な文字列置き換えを行う。

■文字コードを出来るだけUTF-8に統一
・これまで、ソースコードにSJISを使ってたが、GitHubで表示する際に
　文字化けする出の、出来るだけUTF-8に統一。
・ただし、下記の3ファイルはUTF-8にすると、DIGAでエラーメッセージ
　が出るため、SJISのままとした。
　・エラーメッセージ：番組名の書き込みができません。
　　　　　　　　　　　サポートしていない文字コードです。
　・SJIS形式のファイル：
　　・diga-rename.html
　　・diga-rename.js
　　・diga-rename-leftF.html


【2016/03/02】機能を全面的に見直し　(Historyとしては初版)

■diga-dump.jsを大幅見直し
・番組一覧の表示を、javascriptから制御するようにした。
・これにより、番組一覧の画面切り替え等の手作業が不要となる。
・ダンプの所得方法は下記(diga-dump.jsより抜粋)。
　 1.ChromeでDIGAにログイン。
　 2.画面左側の番組編集ボタンを押して、番組名一覧を表示。
　 3.画面下の「No.選択:」セレクタで、ダンプを開始したい画面を表示。
　　（これを行わない場合は、先頭番組以降の全ての情報をダンプ)
　 4.F12キーを押してChromeの「Developer Tools」を表示。
　 5.diga-dump.jsの内容をコピーして、コンソールにペーストする。
　　・ペーストしたJavascriptのコードが、表示されている画面以降の
　　　全ての番組情報を自動的に表示・抽出し、ファイル「tinfo.txt」に保管。
・途中で中止したい場合は、コンソールに下記を打ち込む。
　digaGetTitlesStop()
・途中で中止したのち、下記のように下記コマンドで再実行可能。
　・digaGetTitlesStart()　　：表示画面以降の番組情報ををダンプ
　・digaGetTitlesStart(s)　 ：s画面目以降の番組情報ををダンプ
　・digaGetTitlesStart(s, e)：s画面目～(e-1)画面目の番組情報ををダンプ
　※s画面目とは、「No.選択:」セレクの何番目かとうこと(0から始まる)
・タイトル行は、後続ツールで邪魔なので、出力しないこととした。

■rename-tinfo.html, jsを見直し
・書換え規則や番組情報をlocalStorageで引き継げるようにした。
　・前回入力した書換え規則が引き継がれる。
　・書換え後の番組情報がdiga-rename.html,jsに引き継がれる。
・規則を適用した後に、再度ソートする処理を追加。
・書換えの結果、変更がないものは出力を抑止。
・「説明を表示」ボタンを追加。
　（詳細な説明は、ボタンで表示してご覧ください)

■diga-rename.html,jsを見直し
・書換え規則や番組情報をlocalStorageで引き継げるようにした。
・1つの番組を書き換える度に行う、DIGAの待ち時間を、GUIから設定可能とした。
　この値を書き換えると、残り時間が更新されるようになってます。
・進捗が分かるよう、書換えの全件数、処理中番号、残り時間の表示を追加。
・番組情報を左のフレームに縮小して表示。
・いざとなったら途中で中止できるように、「中止」ボタンを追加。
・使い方を左のフレーム表示。

